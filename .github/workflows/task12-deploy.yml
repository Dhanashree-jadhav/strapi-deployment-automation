name: Deploy to ECS with CodeDeploy

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-2
  ECR_REPO: strapi-app-ecr-dhan
  ECS_CLUSTER: strapi-task11-cluster-dh
  ECS_SERVICE: strapi-task11-service-dh
  CODEDEPLOY_APP: strapi-codedeploy-app-dh
  CODEDEPLOY_DEPLOYMENT_GROUP: strapi-deployment-group-dh

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Register ECS task definition
        id: register-task
        run: |
          TASK_DEF_ARN=$(aws ecs register-task-definition \
            --cli-input-json file://task-7-ecs-fargate-terraform/task-definition.json \
            --query 'taskDefinition.taskDefinitionArn' \
            --output text)
          echo "TASK_DEF_ARN=$TASK_DEF_ARN" >> $GITHUB_ENV

      - name: Prepare AppSpec file
        run: |
          cp task-7-ecs-fargate-terraform/appspec.yaml appspec.yaml
          sed -i "s|TASK_DEFINITION_ARN|$TASK_DEF_ARN|g" appspec.yaml
          cat appspec.yaml  # For debug

      - name: Create CodeDeploy revision
        run: |
          CONTENT=$(base64 -w 0 appspec.yaml)
          echo "{\"revisionType\":\"AppSpecContent\",\"appSpecContent\":{\"content\":\"$CONTENT\"}}" > codedeploy-revision.json

      - name: Deploy to ECS via CodeDeploy
        run: |
          aws deploy create-deployment \
            --application-name ${{ env.CODEDEPLOY_APP }} \
            --deployment-group-name ${{ env.CODEDEPLOY_DEPLOYMENT_GROUP }} \
            --revision file://codedeploy-revision.json \
            --deployment-config-name CodeDeployDefault.ECSAllAtOnce \
            --region ${{ env.AWS_REGION }}
