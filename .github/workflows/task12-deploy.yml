name: Task 12 â€“ Deploy to ECS with CodeDeploy

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-south-1
  ECR_REPOSITORY: strapi-ecr-dh
  ECS_CLUSTER: strapi-cluster-dh
  ECS_SERVICE: strapi-service-dh
  TASK_DEFINITION_FILE: task-def.json
  TASK_FAMILY: strapi-task-family-dh
  CONTAINER_NAME: strapi
  CODEDEPLOY_APP: strapi-codedeploy-app-dh
  CODEDEPLOY_GROUP: strapi-deployment-group-dh
  S3_BUCKET: strapi-artifacts-dh
  APP_SPEC_FILE: appspec-strapi.yaml

jobs:
  deploy:
    name: Deploy to ECS Fargate via CodeDeploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Push Docker image to ECR
        run: |
          IMAGE_TAG=${GITHUB_SHA::8}
          IMAGE_URI="${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG"
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI
        env:
          GITHUB_SHA: ${{ github.sha }}

      - name: Download existing task definition
        run: |
          aws ecs describe-task-definition \
            --task-definition ${{ env.TASK_FAMILY }} \
            --query taskDefinition > current-task-def.json

      - name: Prepare new task definition with updated image
        id: update-task-def
        run: |
          IMAGE_TAG=${GITHUB_SHA::8}
          IMAGE_URI="${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG"
          jq --arg IMAGE "$IMAGE_URI" '.containerDefinitions[0].image = $IMAGE' current-task-def.json > new-task-def.json
          echo "TASK_DEF_ARN=$(aws ecs register-task-definition --cli-input-json file://new-task-def.json --query 'taskDefinition.taskDefinitionArn' --output text)" >> $GITHUB_ENV

      - name: Update appspec file with new task definition
        run: |
          cp ${{ env.APP_SPEC_FILE }} appspec-temp.yaml
          sed -i "s|TASK_DEF_ARN|${{ env.TASK_DEF_ARN }}|g" appspec-temp.yaml

      - name: Zip appspec and scripts
        run: |
          zip -r appspec-strapi.zip appspec-temp.yaml scripts/

      - name: Upload to S3
        run: |
          aws s3 cp appspec-strapi.zip s3://${{ env.S3_BUCKET }}/appspec-strapi.zip

      - name: Create CodeDeploy deployment
        run: |
          aws deploy create-deployment \
            --application-name ${{ env.CODEDEPLOY_APP }} \
            --deployment-group-name ${{ env.CODEDEPLOY_GROUP }} \
            --s3-location bucket=${{ env.S3_BUCKET }},bundleType=zip,key=appspec-strapi.zip \
            --file-exists-behavior OVERWRITE
