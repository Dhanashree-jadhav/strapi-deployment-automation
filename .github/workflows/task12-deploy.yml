name: Deploy to ECS with CodeDeploy

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-2
  ECR_REPO: strapi-app-ecr-dhan
  ECS_CLUSTER: strapi-task11-cluster-dh
  ECS_SERVICE: strapi-task11-service-dh
  CODEDEPLOY_APP: strapi-codedeploy-app-dh
  CODEDEPLOY_DEPLOYMENT_GROUP: strapi-deployment-group-dh
  S3_BUCKET: codedeploy-artifacts-dhanu
  BUNDLE_NAME: codedeploy.zip

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} \
          | docker login --username AWS --password-stdin \
            "${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com"

      - name: Build Docker image
        run: |
          IMAGE_TAG=${GITHUB_SHA::8}
          docker build -t ${{ env.ECR_REPO }}:$IMAGE_TAG .

      - name: Tag & Push image to ECR
        run: |
          IMAGE_TAG=${GITHUB_SHA::8}
          ECR_URI="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO }}"
          docker tag ${{ env.ECR_REPO }}:$IMAGE_TAG $ECR_URI:$IMAGE_TAG
          docker push $ECR_URI:$IMAGE_TAG
          echo "IMAGE_URI=$ECR_URI:$IMAGE_TAG" >> $GITHUB_ENV

      - name: Update ECS task definition
        id: update-task-def
        run: |
          sed "s|<IMAGE_URI>|${{ env.IMAGE_URI }}|g" task-7-ecs-fargate-terraform/task-definition.json > task-def-updated.json

          TASK_DEF_ARN=$(aws ecs register-task-definition \
            --cli-input-json file://task-def-updated.json \
            --query 'taskDefinition.taskDefinitionArn' \
            --output text)
          
          echo "TASK_DEF_ARN=$TASK_DEF_ARN" >> $GITHUB_ENV
          echo "TASK_DEF_ARN=$TASK_DEF_ARN" >> $GITHUB_OUTPUT

      - name: Prepare appspec.json
        run: |
          sed "s|TASK_DEFINITION_ARN|${{ env.TASK_DEF_ARN }}|g" task-7-ecs-fargate-terraform/appspec.json > appspec.json

      - name: Create deployment bundle
        run: |
          zip ${{ env.BUNDLE_NAME }} appspec.json

      - name: Upload bundle to S3
        run: |
          aws s3 cp ${{ env.BUNDLE_NAME }} s3://${{ env.S3_BUCKET }}/${{ env.BUNDLE_NAME }}

      - name: Trigger deployment via CodeDeploy
        run: |
          aws deploy create-deployment \
            --application-name ${{ env.CODEDEPLOY_APP }} \
            --deployment-group-name ${{ env.CODEDEPLOY_DEPLOYMENT_GROUP }} \
            --s3-location bucket=${{ env.S3_BUCKET }},key=${{ env.BUNDLE_NAME }},bundleType=zip \
            --deployment-config-name CodeDeployDefault.ECSAllAtOnce \
            --region ${{ env.AWS_REGION }}
